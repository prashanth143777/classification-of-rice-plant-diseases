# -*- coding: utf-8 -*-
"""hog.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XKm2o6h88W5BnW4JD0NbacWxWzVIRL7R
"""

#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Mon Aug 10 01:30:42 2020

@author: root
"""

import cv2

import os,glob

from os import listdir,makedirs

from os.path import isfile,join
path = 'hog Leafsmut ' # Source Folder
dstpath = 'hogrescale Leafsmut' # Destination Folder
try:
    makedirs(dstpath)
except:
    print ("Directory already exist, images will be written in same folder")
# Folder won't used
files = [f for f in listdir(path) if isfile(join(path,f))] 
for image in files:
    try:
        img = cv2.imread(os.path.join(path,image))
#better dissplay
        hog_image_rescaled = exposure.rescale_intensity(img, in_range=(0, 50))
        dstPath = join(dstpath,image)
        cv2.imwrite(dstPath,hog_image_rescaled)
    except:
        print ("{} is not converted".format(image))
for fil in glob.glob("*.jpg"):
    try:
        image = cv2.imread(fil) 
        hog_image_rescaleded = exposure.rescale_intensity(image, in_range=(0, 50))
        cv2.imwrite(os.path.join(dstpath,fil),hog_image_rescaleded)
    except:
        print('{} is not converted')

cd drive/My Drive/Data Sets/rice_leaf_diseases/bilateral

ls

cd otus

ls

import matplotlib.pyplot as plt

from skimage.feature import hog
from skimage import data, exposure
from skimage.io import imread
from skimage.io import imshow
import cv2

import os,glob

from os import listdir,makedirs

from os.path import isfile,join
path = 'outs Leafsmut' # Source Folder
dstpath = 'hog Leafsmut' # Destination Folder
try:
    makedirs(dstpath)
except:
    print ("Directory already exist, images will be written in same folder")
# Folder won't used
files = [f for f in listdir(path) if isfile(join(path,f))] 
for image in files:
    try:
        img = cv2.imread(os.path.join(path,image))
        fd, hog_image = hog(img, orientations=8, pixels_per_cell=(16, 16),
                    cells_per_block=(1, 1), visualize=True, multichannel=True)
        dstPath = join(dstpath,image)
        cv2.imwrite(dstPath,hog_image)
    except:
        print ("{} is not converted".format(image))
for fil in glob.glob("*.jpg"):
    try:
        image = cv2.imread(fil) 
        fd, hog_images = hog(image, orientations=8, pixels_per_cell=(16, 16),
                    cells_per_block=(1, 1), visualize=True, multichannel=True)
        cv2.imwrite(os.path.join(dstpath,fil),hog_images)
    except:
        print('{} is not converted')